name: CI/CD

on:
  push:
    branches:
      - '**'
      - '!develop'
  pull_request:
    branches: [ develop ]
    types: [closed]

jobs:
  Backend-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Intall npm packages
      run: npm install --prefix src/Backend/
    - name: Running backend tests
      run: npm run test --prefix src/Backend/

  Frontend-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Intall npm packages
      run: npm install --prefix src/Frontend/
    - name: Running frontend tests
      run: npm run test --prefix src/Frontend/

  Build-and-Deploy-Frontend:
    if: github.event.pull_request.merged == true
    needs: [Backend-test, Frontend-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
         token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
      - run: git config --global user.name ${{ secrets.GIT_NAME }}
      - run: git config --global user.email ${{ secrets.GIT_EMAIL }}
      - run: npm version patch --prefix src/Frontend/

      - name: Bump version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master
      - run: git add . && git commit -m "Bump version to ${{ steps.package-version.outputs.current-version }}" -a
      - run: git push "https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY"
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push frontend
        id: docker_build_frontend
        uses: docker/build-push-action@v2
        with:
          context: src/Frontend/
          file: src/Frontend/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: gabendocker/offer-frontend:latest
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  Build-and-Deploy-Backend:
    if: github.event.pull_request.merged == true
    needs: [Backend-test, Frontend-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
         token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
      - run: git config --global user.name ${{ secrets.GIT_NAME }}
      - run: git config --global user.email ${{ secrets.GIT_EMAIL }}
      - run: npm version patch --prefix src/Backend/
      - run: git add . && git commit -m "Bump version" -a
      - run: git push "https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY"
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push backend
        id: docker_build_backend
        uses: docker/build-push-action@v2
        with:
          context: src/Backend/
          file: src/Backend/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: gabendocker/offer-backend:latest
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

    # steps:
      # - name: Install SSH key
      #   uses: shimataro/ssh-key-action@v2
      #   with:
      #     key: ${{ secrets.SSH_KEY }}
      #     name: AWS_mod
      #     known_hosts: ${{ secrets.KNOWN_HOSTS }}

      # - name: Add permission to deploy script
      #   run: chmod +x ./deploy_to_aws.sh

      # - name: Deploy over ssh
      #   run: ./deploy_to_aws.sh
